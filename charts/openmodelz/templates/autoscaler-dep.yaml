{{- if  .Values.autoscaler.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "openmodelz.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: autoscaler
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: autoscaler
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.autoscaler.replicas }}
  selector:
    matchLabels:
      app: autoscaler
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "false"
      labels:
        app: autoscaler
    spec:
      priorityClassName: {{ .Values.priorityClass.modelz }}
      {{- if .Values.privatedImage }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      volumes:
      {{- if .Values.basicAuth }}
      - name: auth
        secret:
          secretName: basic-auth
      {{- end }}
      containers:
      - name:  autoscaler
        resources:
          {{- .Values.autoscaler.resources | toYaml | nindent 12 }}
        image: {{ .Values.autoscaler.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
          - "/usr/bin/autoscaler"
          - --debug
        livenessProbe:
          {{- if $.Values.autoscaler.livenessProbe }}
          initialDelaySeconds: {{ $.Values.autoscaler.livenessProbe.initialDelaySeconds | default 0 }}
          periodSeconds: {{ $.Values.autoscaler.livenessProbe.periodSeconds | default 10 }}
          timeoutSeconds: {{ $.Values.autoscaler.livenessProbe.timeoutSeconds | default 5 }}
          failureThreshold: {{ $.Values.autoscaler.livenessProbe.failureThreshold | default 3 }}
          successThreshold: {{ $.Values.autoscaler.livenessProbe.successThreshold | default 1 }}
          {{- end }}
          httpGet:
            path: /system/info
            port: 8080
        readinessProbe:
          {{- if $.Values.autoscaler.readinessProbe }}
          initialDelaySeconds: {{ $.Values.autoscaler.readinessProbe.initialDelaySeconds | default 0 }}
          periodSeconds: {{ $.Values.autoscaler.readinessProbe.periodSeconds | default 10 }}
          timeoutSeconds: {{ $.Values.autoscaler.readinessProbe.timeoutSeconds | default 5 }}
          failureThreshold: {{ $.Values.autoscaler.readinessProbe.failureThreshold | default 3 }}
          successThreshold: {{ $.Values.autoscaler.readinessProbe.successThreshold | default 1 }}
          {{- end }}
          httpGet:
            path: /system/info
            port: 8080
        env:
        - name: MODELZ_GATEWAY_HOST
          value: "http://agent.{{ .Release.Namespace }}:8080"
        - name: MODELZ_PROMETHEUS_HOST
          value: "prometheus.{{ .Release.Namespace }}"
        - name: MODELZ_PROMETHEUS_PORT
          value: "9090"
        {{- if not .Values.basicAuth }}
        - name: MODELZ_BASIC_AUTH
          value: "false"
        {{- end }}
        {{- if .Values.basicAuth }}
        - name: MODELZ_SECRET_PATH
          value: "/var/secrets/autoscaler"
        volumeMounts:
        - name: auth
          readOnly: true
          mountPath: "/var/secrets/autoscaler"
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
